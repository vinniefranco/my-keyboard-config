#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen { zmk,physical-layout = &gggw_crosses_36_layout; };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U   |  I   |  O   | P |
            // |  A  |  S  |  D  |  F  |  G  |     |  H  |  J   |  K   |  L   | ' | 
            // |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M   | CTRL | META | . |
            //             | GUI | LWR | SPC |     | ENT | RSE  | BSPC |

            display-name = "Base";
            bindings = <
&as Q LS(Q)  &as W LS(W)  &as E LS(E)     &as R LS(R)  &as T LS(T)  &as Y LS(Y)  &as U LS(U)  &as I LS(I)  &as O LS(O)  &as P LS(P)
&as A LS(A)  &as S LS(S)  &as D LS(D)     &as F LS(F)  &as G LS(G)  &as H LS(H)  &as J LS(J)  &as K LS(K)  &as L LS(L)  &as SQT LS(SQT)
&as Z LS(Z)  &as X LS(X)  &as C LS(C)     &as V LS(V)  &as B LS(B)  &as N LS(N)  &as M LS(M)  &kp RCTRL    &kp RALT     &as DOT LS(DOT)
                          &lt 3 LEFT_GUI  &mo 1        &kp SPACE    &kp RET      &mo 2        &kp BSPC
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // | !     |  @  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  (  |  )  |
            // | BT1   | BT2 | BT3 | BT4 | BT5 |     | LFT | DWN |  UP | RGT |     |
            // | BTCLR |     |     |     |     |     |     |     |     |     |     |
            //               | GUI |     | SPC |     | ENT | ESC | TAB |

            display-name = "Lower";
            bindings = <
&kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT     &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp LEFT   &kp DOWN  &kp UP           &kp RIGHT  &trans
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans     &trans    &trans           &trans     &trans
                            &kp LGUI      &trans        &kp SPACE     &kp RET    &kp ESC   &kp TAB
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // | 1! |  2@ |  3# |  4$ |  5% |     |  6^ |  7& |  8* |  9(  |  0)  |
            // | -_ |  =+ |  {  |  [  |  (  |     |  )  |  ]  |  }  |  /?  |  \|  |
            // | `~ |     |     |  ,< |  :  |     |  ;  |  .> | CTRL| META |      |
            //            | GUI | ESC | SPC |     | ENT |     | TAB |

            display-name = "Raise";
            bindings = <
&as N1 EXCL      &as N2 AT       &as N3 HASH  &as N4 DOLLAR        &as N5 PERCENT  &as N6 CARET  &as N7 AMPS           &as N8 ASTRK  &as N9 LEFT_PARENTHESIS  &as N0 RIGHT_PARENTHESIS
&as MINUS UNDER  &as EQUAL PLUS  &kp LBRC     &kp LBKT             &kp LPAR        &kp RPAR      &kp RBKT              &kp RBRC      &as FSLH QUESTION        &as BSLH PIPE
&as GRAVE TILDE  &trans          &trans       &as COMMA LESS_THAN  &kp COLON       &kp SEMI      &as DOT GREATER_THAN  &kp LCTRL     &kp RALT                 &trans
                                 &kp LGUI     &kp ESC              &kp SPACE       &kp RET       &trans                &kp TAB
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans
                   &trans     &trans     &trans  &trans  &trans  &trans
            >;
        };
    };
};
